version: "3.8"

services:
  localstack:
    #    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    container_name: "localstack-container"
    image: localstack/localstack
    #    profiles: ["test"]
    ports:
      - "4566:4566"            # LocalStack Gateway
      #      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
      #      - '8055:8080'
      #      - "${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}"
    #      - "8082:8082"
    environment:
      #      - SERVICES=s3:4566
      - DEBUG=1
      #      - DATA_DIR=/data

      #      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      #      - PORT_WEB_UI=8082
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_ACCESS_KEY_ID="test"
      - AWS_SECRET_ACCESS_KEY="test2"
      - AWS_DEFAULT_REGION="us-east-1"
      - DEFAULT_REGION = "us-east-1"
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  db_records:
    #    image: postgres:12.13
    image: postgres:14.6
    container_name: postgres_db_records
    ports:
      - "6543:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: bladesv
      POSTGRES_DB: record

  db_songs:
    image: postgres:14.6
    container_name: postgres_db_songs
    ports:
      - "6545:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: root
      POSTGRES_DB: songs

  #  adminer:
  #    image: adminer
  #    container_name: adminer
  #    restart: always
  #    ports:
  #      - "8080:8080"
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    #    volumes:
    #      - ./init/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    #      - ./init/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    environment:
      RABBITMQ_DEFAULT_USER: bladesv
      RABBITMQ_DEFAULT_PASS: root


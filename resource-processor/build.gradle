plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.springframework.cloud.contract" version "4.1.0"
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'by.mitrakhovich'
version = !!System.getProperty("image_version") ? System.getProperty("image_version") : "latest"

jib {
    to {
        image "${project.name}-image"
        tags = ["${version}"]
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}


compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

ext {
    set('springCloudVersion', "2023.0.0")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.cloud:spring-cloud-stream'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'

    // https://mvnrepository.com/artifact/org.apache.tika/tika-core
    implementation 'org.apache.tika:tika-core:3.0.0-BETA'
// https://mvnrepository.com/artifact/org.apache.tika/tika-parsers-standard-package
    implementation 'org.apache.tika:tika-parsers-standard-package:3.0.0-BETA'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok', 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

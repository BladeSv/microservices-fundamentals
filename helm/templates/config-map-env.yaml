{{/*apiVersion: v1*/}}
{{/*kind: ConfigMap*/}}
{{/*metadata:*/}}
{{/*  name: config-map-env-song-service*/}}
{{/*data:*/}}
{{/*  SONG_SERVICE_PORT: "8081"*/}}
{{/*  SONG_SERVICE_DB_HOST: "song-database"*/}}
{{/*  SONG_SERVICE_DB_PORT: "5432"*/}}
{{/*  SONG_SERVICE_DB_NAME: "songs"*/}}
{{/*  SONG_SERVICE_JPA_DDL_AUTO: "none"*/}}
{{/*  SPRING_PROFILES_ACTIVE: "k8s"*/}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map-env-localstack
data:
  DOCKER_HOST: "unix:///var/run/docker.sock"
  AWS_ACCESS_KEY_ID: "test"
  AWS_SECRET_ACCESS_KEY: "test2"
  AWS_DEFAULT_REGION: "us-east-1"
  DEFAULT_REGION: "us-east-1"
  DEBUG: "1"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map-env-rabbitmq
data:
  RABBITMQ_DEFAULT_USER: "bladesv"
  RABBITMQ_DEFAULT_PASS: "root"
---
{{/*apiVersion: v1*/}}
{{/*kind: ConfigMap*/}}
{{/*metadata:*/}}
{{/*  name: config-map-env-kafka*/}}
{{/*data:*/}}
{{/*  KAFKA_CFG_NODE_ID: "0"*/}}
{{/*  KAFKA_CFG_PROCESS_ROLES: "controller,broker"*/}}
{{/*  KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"*/}}
{{/*  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"*/}}
{{/*  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"*/}}
{{/*  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"*/}}
{{/*  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"*/}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map-env-kafka
data:
  KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper.default.svc.cluster.local:2181"
  KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"





apiVersion: v1
kind: Service
metadata:
  name: resource-database
spec:
  selector:
    app: resource-database
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: {{ .Values.service.type }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: resource-database
spec:
  replicas: 1
  serviceName: "resource-database"
  selector:
    matchLabels:
      app: resource-database
  template:
    metadata:
      labels:
        app: resource-database
    spec:
      containers:
        - name: resource-database
          image: postgres:14.10
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1 FROM sound_record LIMIT 1;'
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 5
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-secret-config-map
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret-config-map
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: app-config-map
                  key: RESOURCE_POSTGRES_DB_NAME
          volumeMounts:
            - name: resource-database-db-pvc
              mountPath: /var/lib/postgresql/data
            - name: resource-database-init-vol
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init-resource-db-schema
      volumes:
        - name: resource-database-init-vol
          configMap:
            name: app-config-map
        - name: resource-database-db-pvc
          emptyDir: { }

